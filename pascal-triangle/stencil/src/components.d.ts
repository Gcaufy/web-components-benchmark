/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface PascalTriangle {
    '_list': any;
  }
  interface PascalTriangleAttributes extends StencilHTMLAttributes {
    '_list'?: any;
  }

  interface TriangleItem {
    'text': string;
  }
  interface TriangleItemAttributes extends StencilHTMLAttributes {
    'text'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'PascalTriangle': Components.PascalTriangle;
    'TriangleItem': Components.TriangleItem;
  }

  interface StencilIntrinsicElements {
    'pascal-triangle': Components.PascalTriangleAttributes;
    'triangle-item': Components.TriangleItemAttributes;
  }


  interface HTMLPascalTriangleElement extends Components.PascalTriangle, HTMLStencilElement {}
  var HTMLPascalTriangleElement: {
    prototype: HTMLPascalTriangleElement;
    new (): HTMLPascalTriangleElement;
  };

  interface HTMLTriangleItemElement extends Components.TriangleItem, HTMLStencilElement {}
  var HTMLTriangleItemElement: {
    prototype: HTMLTriangleItemElement;
    new (): HTMLTriangleItemElement;
  };

  interface HTMLElementTagNameMap {
    'pascal-triangle': HTMLPascalTriangleElement
    'triangle-item': HTMLTriangleItemElement
  }

  interface ElementTagNameMap {
    'pascal-triangle': HTMLPascalTriangleElement;
    'triangle-item': HTMLTriangleItemElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
